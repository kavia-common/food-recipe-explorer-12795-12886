{"is_source_file": true, "format": "Python", "description": "This file contains the implementation of the ItemsService class, providing business logic for managing food items, including creation, updating, deletion, retrieval, and querying functionalities within a food recipe explorer backend.", "external_files": ["../repositories/memory_repo", "../models/domain", "../schemas/food"], "external_methods": ["InMemoryRepository.create_item", "InMemoryRepository.update_item", "InMemoryRepository.delete_item", "InMemoryRepository.get_item", "InMemoryRepository.query_items"], "published": ["ItemsService"], "classes": [{"name": "ItemsService", "description": "Handles business logic related to food items, including creation, updating, deletion, retrieval, and querying."}], "methods": [{"name": "__init__(self, repo: InMemoryRepository)", "description": "Initializes the ItemsService with a repository instance.", "scope": "ItemsService", "scopeKind": "class"}, {"name": "FoodItem create_item(self, payload: FoodItemCreate)", "description": "Creates a new FoodItem based on provided input data and stores it via the repository.", "scope": "ItemsService", "scopeKind": "class"}, {"name": "Optional[FoodItem] update_item(self, item_id: str, payload: FoodItemUpdate)", "description": "Updates an existing FoodItem identified by item_id with new data provided in the payload.", "scope": "ItemsService", "scopeKind": "class"}, {"name": "bool delete_item(self, item_id: str)", "description": "Deletes a FoodItem identified by item_id.", "scope": "ItemsService", "scopeKind": "class"}, {"name": "Optional[FoodItem] get_item(self, item_id: str)", "description": "Retrieves a FoodItem by its item_id.", "scope": "ItemsService", "scopeKind": "class"}, {"name": "Tuple[List[FoodItem],int] query_items( self, q: Optional[str], category: Optional[str], location: Optional[str], min_price: Optional[float], max_price: Optional[float], min_rating: Optional[float], max_rating: Optional[float], tags: Optional[List[str]], sort_by: Optional[str], sort_order: Optional[str], page: int, per_page: int, )", "description": "Performs a filtered and paginated query over FoodItems based on criteria like keywords, category, price, ratings, tags, and sorting options.", "scope": "ItemsService", "scopeKind": "class"}, {"name": "mutate(i: FoodItem)", "scope": "ItemsService.update_item", "scopeKind": "member", "description": "unavailable"}], "calls": ["InMemoryRepository.create_item", "InMemoryRepository.update_item", "InMemoryRepository.delete_item", "InMemoryRepository.get_item", "InMemoryRepository.query_items"], "search-terms": ["ItemsService", "food items business logic", "create_item method", "update_item method", "query_items method", "memory repository", "FoodItem class", "food schemas"], "state": 2, "file_id": 12, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "ItemsService", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^class ItemsService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^    def __init__(self, repo: InMemoryRepository):$/", "language": "Python", "kind": "member", "signature": "(self, repo: InMemoryRepository)", "scope": "ItemsService", "scopeKind": "class"}, {"_type": "tag", "name": "create_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^    def create_item(self, payload: FoodItemCreate) -> FoodItem:$/", "language": "Python", "typeref": "typename:FoodItem", "kind": "member", "signature": "(self, payload: FoodItemCreate)", "scope": "ItemsService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^    def delete_item(self, item_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, item_id: str)", "scope": "ItemsService", "scopeKind": "class"}, {"_type": "tag", "name": "get_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^    def get_item(self, item_id: str) -> Optional[FoodItem]:$/", "language": "Python", "typeref": "typename:Optional[FoodItem]", "kind": "member", "signature": "(self, item_id: str)", "scope": "ItemsService", "scopeKind": "class"}, {"_type": "tag", "name": "mutate", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^        def mutate(i: FoodItem):$/", "file": true, "language": "Python", "kind": "function", "signature": "(i: FoodItem)", "scope": "ItemsService.update_item", "scopeKind": "member"}, {"_type": "tag", "name": "query_items", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^    def query_items($/", "language": "Python", "typeref": "typename:Tuple[List[FoodItem],int]", "kind": "member", "signature": "( self, q: Optional[str], category: Optional[str], location: Optional[str], min_price: Optional[float], max_price: Optional[float], min_rating: Optional[float], max_rating: Optional[float], tags: Optional[List[str]], sort_by: Optional[str], sort_order: Optional[str], page: int, per_page: int, )", "scope": "ItemsService", "scopeKind": "class"}, {"_type": "tag", "name": "update_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/services/items_service.py", "pattern": "/^    def update_item(self, item_id: str, payload: FoodItemUpdate) -> Optional[FoodItem]:$/", "language": "Python", "typeref": "typename:Optional[FoodItem]", "kind": "member", "signature": "(self, item_id: str, payload: FoodItemUpdate)", "scope": "ItemsService", "scopeKind": "class"}], "hash": "35ebdef862dc5aa9858259a5c2eca82a", "format-version": 4, "code-base-name": "BackendService", "filename": "BackendService/src/api/services/items_service.py", "revision_history": [{"26": ""}]}