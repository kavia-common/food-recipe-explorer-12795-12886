{"is_source_file": true, "format": "Python", "description": "This file defines API routes for admin operations related to feedback moderation in a FastAPI application. It includes route handlers, dependency injection setup, and class definitions for feedback statuses.", "external_files": ["../schemas/feedback", "../repositories/memory_repo", "../services/feedback_service", "../core/dependencies", "../core/security"], "external_methods": ["Depends", "HTTPException", "APIRouter", "get_required_user", "ensure_admin"], "published": ["router"], "classes": [{"name": "FeedbackStatus", "description": "Enumeration for feedback moderation statuses: 'approved' or 'rejected'."}], "methods": [{"name": "FeedbackService get_feedback_service(repo: InMemoryRepository = Depends(lambda: InMemoryRepository()))", "description": "Dependency-injected factory function that provides a FeedbackService instance, using an in-memory repository.", "scope": "", "scopeKind": ""}, {"name": "moderate_feedback( feedback_id: str, status: FeedbackStatus, service: FeedbackService = Depends(get_feedback_service), user: AuthUser = Depends(get_required_user), )", "description": "API route handler for updating the status of a feedback item. Requires admin privileges and handles feedback approval or rejection.", "scope": "", "scopeKind": ""}], "calls": ["ensure_admin(user)", "service.set_status(feedback_id, status.value)"], "search-terms": ["FastAPI", "admin feedback route", "modify feedback status", "APIRouter", "FeedbackService", "FeedbackStatus", "moderate_feedback", "admin privileges", "Depends"], "state": 2, "file_id": 18, "knowledge_revision": 42, "git_revision": "", "revision_history": [{"38": ""}, {"42": ""}], "ctags": [{"_type": "tag", "name": "FeedbackStatus", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/routes/admin.py", "pattern": "/^class FeedbackStatus(str, Enum):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "approved", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/routes/admin.py", "pattern": "/^    approved = \"approved\"$/", "language": "Python", "kind": "variable", "scope": "FeedbackStatus", "scopeKind": "class"}, {"_type": "tag", "name": "get_feedback_service", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/routes/admin.py", "pattern": "/^def get_feedback_service(repo: InMemoryRepository = Depends(lambda: InMemoryRepository())) -> Fe/", "language": "Python", "typeref": "typename:FeedbackService", "kind": "function", "signature": "(repo: InMemoryRepository = Depends(lambda: InMemoryRepository()))"}, {"_type": "tag", "name": "moderate_feedback", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/routes/admin.py", "pattern": "/^async def moderate_feedback($/", "language": "Python", "kind": "function", "signature": "( feedback_id: str, status: FeedbackStatus, service: FeedbackService = Depends(get_feedback_service), user: AuthUser = Depends(get_required_user), )"}, {"_type": "tag", "name": "rejected", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/routes/admin.py", "pattern": "/^    rejected = \"rejected\"$/", "language": "Python", "kind": "variable", "scope": "FeedbackStatus", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/routes/admin.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}], "hash": "658fa361c5470805771606ddf1e38143", "format-version": 4, "code-base-name": "BackendService", "filename": "BackendService/src/api/routes/admin.py", "fields": [{"name": "approved = \"approved\"", "scope": "FeedbackStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "rejected = \"rejected\"", "scope": "FeedbackStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}