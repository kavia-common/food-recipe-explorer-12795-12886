{"is_source_file": true, "format": "Python", "description": "This file implements an in-memory repository class for managing FoodItem objects along with their ratings and feedback. It includes methods for creating, updating, deleting, and querying food items, as well as adding ratings and feedback, and seeding initial sample data.", "external_files": ["../models/domain"], "external_methods": [], "published": ["InMemoryRepository"], "classes": [{"name": "InMemoryRepository", "description": "A mock repository simulating persistence for FoodItem, Rating, and Feedback objects, suitable for testing or simple in-memory use cases."}], "methods": [{"name": "__init__(self)", "description": "Initializes the repository with empty data stores and seeds it with sample FoodItem data.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "_seed_items(self)", "description": "Seeds the repository with predefined FoodItem instances for demonstration purposes.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "FoodItem create_item(self, item: FoodItem)", "description": "Adds a new FoodItem to the repository.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Optional[FoodItem] update_item(self, item_id: str, mutator: Callable[[FoodItem], None])", "description": "Updates an existing FoodItem identified by its ID using a mutator function.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "bool delete_item(self, item_id: str)", "description": "Removes a FoodItem from the repository by ID.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Optional[FoodItem] get_item(self, item_id: str)", "description": "Retrieves a FoodItem by its ID.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Iterable[FoodItem] list_items(self)", "description": "Returns a list of all FoodItems in the repository.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Rating add_rating(self, rating: Rating)", "description": "Adds a rating to a FoodItem and updates its average rating.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "List[Rating] list_ratings_for_item(self, item_id: str)", "description": "Retrieves all ratings associated with a specific FoodItem.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Feedback add_feedback(self, feedback: Feedback)", "description": "Adds user feedback to a FoodItem.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "List[Feedback] list_feedback_for_item(self, item_id: str)", "description": "Retrieves all feedback associated with a specific FoodItem.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "Optional[Feedback] set_feedback_status(self, feedback_id: str, status: str)", "description": "Updates the status of a feedback entry.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "List[FoodItem] query_items( self, q: Optional[str] = None, category: Optional[str] = None, location: Optional[str] = None, min_price: Optional[float] = None, max_price: Optional[float] = None, min_rating: Optional[float] = None, max_rating: Optional[float] = None, tags: Optional[List[str]] = None, sort_by: Optional[str] = None, sort_order: Optional[str] = None, )", "description": "Performs complex filtering, sorting, and querying of FoodItems based on various criteria.", "scope": "InMemoryRepository", "scopeKind": "class"}, {"name": "bool matches(item: FoodItem)", "scope": "InMemoryRepository.query_items", "scopeKind": "member", "description": "unavailable"}], "calls": ["uuid4()", "datetime.utcnow()"], "search-terms": ["InMemoryRepository", "food items", "ratings", "feedback", "seed data", "query filtering", "mock persistence"], "state": 2, "file_id": 11, "knowledge_revision": 24, "git_revision": "", "ctags": [{"_type": "tag", "name": "InMemoryRepository", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^class InMemoryRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_seed_items", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def _seed_items(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "add_feedback", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def add_feedback(self, feedback: Feedback) -> Feedback:$/", "language": "Python", "typeref": "typename:Feedback", "kind": "member", "signature": "(self, feedback: Feedback)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "add_rating", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def add_rating(self, rating: Rating) -> Rating:$/", "language": "Python", "typeref": "typename:Rating", "kind": "member", "signature": "(self, rating: Rating)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def create_item(self, item: FoodItem) -> FoodItem:$/", "language": "Python", "typeref": "typename:FoodItem", "kind": "member", "signature": "(self, item: FoodItem)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def delete_item(self, item_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, item_id: str)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def get_item(self, item_id: str) -> Optional[FoodItem]:$/", "language": "Python", "typeref": "typename:Optional[FoodItem]", "kind": "member", "signature": "(self, item_id: str)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_feedback_for_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def list_feedback_for_item(self, item_id: str) -> List[Feedback]:$/", "language": "Python", "typeref": "typename:List[Feedback]", "kind": "member", "signature": "(self, item_id: str)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_items", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def list_items(self) -> Iterable[FoodItem]:$/", "language": "Python", "typeref": "typename:Iterable[FoodItem]", "kind": "member", "signature": "(self)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_ratings_for_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def list_ratings_for_item(self, item_id: str) -> List[Rating]:$/", "language": "Python", "typeref": "typename:List[Rating]", "kind": "member", "signature": "(self, item_id: str)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "matches", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^        def matches(item: FoodItem) -> bool:$/", "file": true, "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(item: FoodItem)", "scope": "InMemoryRepository.query_items", "scopeKind": "member"}, {"_type": "tag", "name": "query_items", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def query_items($/", "language": "Python", "typeref": "typename:List[FoodItem]", "kind": "member", "signature": "( self, q: Optional[str] = None, category: Optional[str] = None, location: Optional[str] = None, min_price: Optional[float] = None, max_price: Optional[float] = None, min_rating: Optional[float] = None, max_rating: Optional[float] = None, tags: Optional[List[str]] = None, sort_by: Optional[str] = None, sort_order: Optional[str] = None, )", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "set_feedback_status", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def set_feedback_status(self, feedback_id: str, status: str) -> Optional[Feedback]:$/", "language": "Python", "typeref": "typename:Optional[Feedback]", "kind": "member", "signature": "(self, feedback_id: str, status: str)", "scope": "InMemoryRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_item", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/repositories/memory_repo.py", "pattern": "/^    def update_item(self, item_id: str, mutator: Callable[[FoodItem], None]) -> Optional[FoodIte/", "language": "Python", "typeref": "typename:Optional[FoodItem]", "kind": "member", "signature": "(self, item_id: str, mutator: Callable[[FoodItem], None])", "scope": "InMemoryRepository", "scopeKind": "class"}], "hash": "debf47e6530b961da6fc06e9ff54947f", "format-version": 4, "code-base-name": "BackendService", "filename": "BackendService/src/api/repositories/memory_repo.py", "revision_history": [{"24": ""}]}