{"is_source_file": true, "format": "Python", "description": "This file defines dependencies related to pagination, sorting, and user authentication for API endpoints in a FastAPI application. It includes data models, parameter extraction functions, and user dependency functions.", "external_files": ["./security.py"], "external_methods": ["mock_get_current_user_optional", "mock_get_current_user_required", "AuthUser"], "published": ["get_pagination", "get_sorting", "get_optional_user", "get_required_user"], "classes": [{"name": "PaginationParams", "description": "Data model for pagination parameters, including page number and items per page."}, {"name": "SortParams", "description": "Data model for sorting parameters, including sort field and order."}], "methods": [{"name": "PaginationParams get_pagination( page: int = Query(1, ge=1, description=\"Page number (1-based)\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), )", "description": "Function to extract pagination parameters from query parameters and return a PaginationParams instance.", "scope": "", "scopeKind": ""}, {"name": "SortParams get_sorting( sort_by: Optional[str] = Query(None, description=\"Field to sort by\"), sort_order: Optional[str] = Query(None, pattern=\"^(asc|desc)$\", description=\"Sort order (asc|desc)\"), )", "description": "Function to extract sorting parameters from query parameters and return a SortParams instance.", "scope": "", "scopeKind": ""}, {"name": "Optional[AuthUser] get_optional_user( user: Optional[AuthUser] = Depends(mock_get_current_user_optional) )", "description": "Asynchronous function providing optional authentication context, returns AuthUser or None.", "scope": "", "scopeKind": ""}, {"name": "AuthUser get_required_user( user: AuthUser = Depends(mock_get_current_user_required) )", "description": "Asynchronous function requiring authentication, raises error if user not authenticated.", "scope": "", "scopeKind": ""}], "calls": ["mock_get_current_user_optional", "mock_get_current_user_required"], "search-terms": ["PaginationParams", "SortParams", "get_pagination", "get_sorting", "user dependency", "FastAPI dependencies", "AuthUser"], "state": 2, "file_id": 6, "knowledge_revision": 47, "git_revision": "", "revision_history": [{"14": ""}, {"40": ""}, {"45": ""}, {"47": ""}], "ctags": [{"_type": "tag", "name": "PaginationParams", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^class PaginationParams(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SortParams", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^class SortParams(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "get_optional_user", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^async def get_optional_user($/", "language": "Python", "typeref": "typename:Optional[AuthUser]", "kind": "function", "signature": "( user: Optional[AuthUser] = Depends(mock_get_current_user_optional) )"}, {"_type": "tag", "name": "get_pagination", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^def get_pagination($/", "language": "Python", "typeref": "typename:PaginationParams", "kind": "function", "signature": "( page: int = Query(1, ge=1, description=\"Page number (1-based)\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), )"}, {"_type": "tag", "name": "get_required_user", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^async def get_required_user($/", "language": "Python", "typeref": "typename:AuthUser", "kind": "function", "signature": "( user: AuthUser = Depends(mock_get_current_user_required) )"}, {"_type": "tag", "name": "get_sorting", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^def get_sorting($/", "language": "Python", "typeref": "typename:SortParams", "kind": "function", "signature": "( sort_by: Optional[str] = Query(None, description=\"Field to sort by\"), sort_order: Optional[str] = Query(None, pattern=\"^(asc|desc)$\", description=\"Sort order (asc|desc)\"), )"}, {"_type": "tag", "name": "page", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^    page: int = Field(1, ge=1, description=\"Page number (1-based)\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginationParams", "scopeKind": "class"}, {"_type": "tag", "name": "per_page", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^    per_page: int = Field(10, ge=1, le=100, description=\"Items per page (max 100)\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginationParams", "scopeKind": "class"}, {"_type": "tag", "name": "sort_by", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^    sort_by: Optional[str] = Field(None, description=\"Field to sort by\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "SortParams", "scopeKind": "class"}, {"_type": "tag", "name": "sort_order", "path": "/home/kavia/workspace/code-generation/food-recipe-explorer-12795-12886/BackendService/src/api/core/dependencies.py", "pattern": "/^    sort_order: Optional[str] = Field(None, description=\"Sort order: asc|desc\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "SortParams", "scopeKind": "class"}], "hash": "961fa0db366b3f256da14af1e95ba704", "format-version": 4, "code-base-name": "BackendService", "filename": "BackendService/src/api/core/dependencies.py", "fields": [{"name": "int page", "scope": "PaginationParams", "scopeKind": "class", "description": "unavailable"}, {"name": "int per_page", "scope": "PaginationParams", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] sort_by", "scope": "SortParams", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] sort_order", "scope": "SortParams", "scopeKind": "class", "description": "unavailable"}]}